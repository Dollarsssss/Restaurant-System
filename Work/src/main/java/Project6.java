




import java.util.*;
import javax.swing.table.DefaultTableModel;
import java.text.DecimalFormat;
import javax.swing.JOptionPane;
import javax.swing.UIManager;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author Windows10
 */
public class Project6 extends javax.swing.JFrame {

    /**
     * Creates new form Project6
     */
    //ราคาอาหาร
    String pricest[] = {"239", "279", "329", "259", "189", "229", "189", "159", "119", "139", "159", "299",
         "39", "49", "39", "49", "39", "39", "39", "49", "49", "59", "39", "20",
        "59", "89", "29", "19", "79", "49", "79", "129", "109", "39"};
   
    DecimalFormat df = new DecimalFormat("#,###.00"); //สร้างค่า Colum
 
    DefaultTableModel model;  //สร้างโมเดลตาราง สร้างเพื่อควบคุม การเพิ่ม การลบ ในตาราง
    double total = 0; //ราคารวมทั้งหมด
   
    int selected; //เก็บแถวที่ผู้ใช้เลือก
    
    int n;  //เก็บตำแหน่งซ้ำ
    int nn;
   
    double money;   //เก็บราคารวม
    
    

    public Project6() {
        initComponents();
         txtPriceSt.setText(pricest[0]); //เซตราคาอาหารเริ่มต้นตัวแรก
         txtTotalSt.requestFocus(); //คอเซอร์ไปอยู่ที่ จำนวนราคาตั้งแต่เริ่มรัน
        model = (DefaultTableModel) tb.getModel(); //อ้างอิงจากตาราง ทั้งจำนวนคอลัม จำนวนแถว
        tb.getTableHeader().setFont(new java.awt.Font("TH Baijam", 1, 18));
        UIManager.put("OptionPane.messageFont", new java.awt.Font("TH Baijam", 1, 18));

    }

    public boolean check() { //เช็คข้อมุลที่ซ้ำ ระหว่างข้อมูลใน Combo box และ ใน ช้อมูลรายการอาหารในตาราง ถ้าชื่อที่จะเพิ่มซ้ำกันก็ให้นำจำนวนนั้นใาบวกเพิ่ม
        for (int i = 0; i < tb.getRowCount(); i++) { //RowCount เช็คทุกแถว
            n = i;
       
             if (cbbSteak.getSelectedItem().toString().equals(tb.getValueAt(i, 1))) {
                System.out.println("รายการอาหารซ่ำ ที่แถว" + n);

                return true;
            }
            
        }
        return false;
    }
  public boolean check1() { //เช็คข้อมุลที่ซ้ำ ระหว่างข้อมูลใน Combo box และ ใน ช้อมูลรายการอาหารในตาราง ถ้าชื่อที่จะเพิ่มซ้ำกันก็ให้นำจำนวนนั้นใาบวกเพิ่ม
        for (int i = 0; i < tb.getRowCount(); i++) { //RowCount เช็คทุกแถว
            nn = i;
       
             if ((cbbTB.getSelectedItem().toString().equals(tb.getValueAt(i, 0))) &&(cbbSteak.getSelectedItem().toString().equals(tb.getValueAt(i, 1)))) {
                System.out.println("รายการอาหารซ่ำ ที่แถว" + n);

                   return true;
            }
            
        }
       
         return false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        txtPriceSt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtTotalSt = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnDel = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb = new javax.swing.JTable();
        lbTotal = new javax.swing.JLabel();
        cbbSteak = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        cbbTB = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel2.setFont(new java.awt.Font("TH Baijam", 1, 18)); // NOI18N
        jLabel2.setText("ราคา :");

        txtPriceSt.setEnabled(false);
        txtPriceSt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPriceStActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("TH Baijam", 1, 18)); // NOI18N
        jLabel3.setText("จำนวน :");

        txtTotalSt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalStActionPerformed(evt);
            }
        });

        btnAdd.setFont(new java.awt.Font("TH Baijam", 0, 18)); // NOI18N
        btnAdd.setText("เพิ่ม");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnDel.setFont(new java.awt.Font("TH Baijam", 0, 18)); // NOI18N
        btnDel.setText("ลบ");
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });

        btnEdit.setFont(new java.awt.Font("TH Baijam", 0, 18)); // NOI18N
        btnEdit.setText("แก้ไข");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        tb.setFont(new java.awt.Font("TH Baijam", 1, 18)); // NOI18N
        tb.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "TB", "รายการอาหาร", "ราคา", "จำนวน", "จำนวนเงิน"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tb);
        if (tb.getColumnModel().getColumnCount() > 0) {
            tb.getColumnModel().getColumn(0).setResizable(false);
            tb.getColumnModel().getColumn(1).setResizable(false);
            tb.getColumnModel().getColumn(2).setResizable(false);
            tb.getColumnModel().getColumn(3).setResizable(false);
            tb.getColumnModel().getColumn(4).setResizable(false);
        }

        lbTotal.setFont(new java.awt.Font("TH Baijam", 1, 24)); // NOI18N
        lbTotal.setText("ราคารวม :");

        cbbSteak.setFont(new java.awt.Font("TH Baijam", 0, 18)); // NOI18N
        cbbSteak.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ออสเตรเลียสเต็ก ", "โคขุนออสเตรเลีย ", "โคขุนซอสเปปเปอร์ ", "ทีโบนหมูโคขุน ", "หมูคุโรบุตะพ็อคช็อป ", "พอร์คชอปซอสพริกไทยดำ", "หมูคุโรบุตะทีโบน ", "สันคอหมูคุโรบุตะ ", "สเต็กไก่ซอสแจ่ว ", "สเต็กปลาดอลลี่", "สเต็กไก่+ไส้กรอก ", "นิวซีแลนด์เซอร์ลอย", "ชามะนาวโซดา ", "แตงโมมะนาว ", "แตงโมปั่น ", "บลูเบอร์รี่ ", "มะนาวมิ้นโซดา ", "น้ำเลม่อน ", "น้ำสตรอเบอร์รี่", "น้ำสับปะรด ", "น้ำราสเบอรี่", "น้ำสละ ", "น้ำเชอรี่ ", "น้ำใบเตย", "ขนมปังโรลชีส ", "ขนมปังม้วนอัลมอนด์", "ขนมปังปิ้งสังขยา", "ขนมปังเสียบไม้", "ขนมปังอบชีส", "ชีสทอดกรอบ", "ปอเปี๊ยะกุ้งชีส", "พิซซ่าโรลแฮมชีส", "มันฝรั่งชุบแป้งทอด", "อกไก่ชีสบอล" }));
        cbbSteak.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbbSteakItemStateChanged(evt);
            }
        });
        cbbSteak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbSteakActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("TH Baijam", 1, 18)); // NOI18N
        jLabel6.setText("รายการอาหาร :");

        jButton1.setFont(new java.awt.Font("TH Baijam", 0, 18)); // NOI18N
        jButton1.setText("สั่งซื้อ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("TH Baijam", 1, 14)); // NOI18N
        jButton2.setText("กลับ");
        jButton2.setActionCommand("");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        cbbTB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6)
                            .addComponent(jLabel3))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(cbbSteak, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTotalSt, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPriceSt, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnDel)
                                .addComponent(btnAdd))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnEdit)
                                .addGap(4, 4, 4)))
                        .addGap(96, 96, 96)
                        .addComponent(cbbTB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbTotal)
                                .addGap(198, 198, 198)
                                .addComponent(jButton1))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 624, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(84, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbbSteak, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnAdd)
                        .addComponent(cbbTB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPriceSt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(btnDel)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTotalSt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(btnEdit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(14, 14, 14)
                .addComponent(jButton2)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtTotalStActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalStActionPerformed

    }//GEN-LAST:event_txtTotalStActionPerformed

    private void txtPriceStActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPriceStActionPerformed

    }//GEN-LAST:event_txtPriceStActionPerformed

    private void cbbSteakItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbbSteakItemStateChanged
        txtPriceSt.setText(pricest[cbbSteak.getSelectedIndex()]); //ราคา เปลี่ยนแปลงตามที่เลือกใน คอมโบบ้อกและนำตำแหน่งที่ได้มาเซตใน Price
    }//GEN-LAST:event_cbbSteakItemStateChanged

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        Vector v = new Vector(); //นำข้อมูลมาเก็บในเว็กเตอร์แล้วค่อยกระจายข้อมูลลงในตาราง
        if (txtTotalSt.getText().isEmpty()) { //ถ้าจำนวนเป็นค่าว่างให้แสดงผลเตือน
            JOptionPane.showMessageDialog(this, "โปรดป้อนจำนวนอาหาร", "", JOptionPane.ERROR_MESSAGE);
        }

        if (check1()) {
            //เพิ่มจำนวนเข้าไปก่อนหน้า
            int a = Integer.parseInt(model.getValueAt(nn, 3).toString()) + Integer.parseInt(txtTotalSt.getText()); // a =จำนวนเดิมที่เพิ่มเข้าไปก่อนหน้า +เพิ่มจำนวนที่เพิ่มเข้าไปใหม่
         model.setValueAt(a, nn, 3); //นำข้อมูลของ a ลงไป ในแถวที่เลือกและคอลัมที่ 2
            System.out.println("a = " + a);
           
            //หาจำนวนเงินของแต่ละรายการ
            double price = a * Double.valueOf(tb.getValueAt(nn, 2).toString());
            System.out.println("จำนวนเงินใหม่ + " + price);
            model.setValueAt(df.format(price), nn, 4); //นำราคาใหม่มาแสดงแถวที่เลือกคอลัมที่ 3
            //หาค่ารวม
            money = Double.valueOf(txtPriceSt.getText()) * Double.valueOf(txtTotalSt.getText()); //หาจำนวนเงินแต่ละรายการที่ต้องจ่าย โดยราคา * จำนวน 
            total += money;
            lbTotal.setText("ราคารวม : " + df.format(total) + " บาท ");
     
        } 

    
        else {
            v.add(cbbTB.getSelectedItem().toString());
            v.add(cbbSteak.getSelectedItem().toString()); //รายการอาหาร
            v.add(txtPriceSt.getText());//ราคาชุด
            v.add(txtTotalSt.getText());//จำนวน
            money = Double.valueOf(txtPriceSt.getText()) * Double.valueOf(txtTotalSt.getText()); //หาจำนวนเงินแต่ละรายการที่ต้องจ่าย โดยราคา * จำนวน
            v.add(df.format(money));// เก็บค่าลงจำนวนเงืนลงในตาราง
            
            total += money; //หาราคารวมทั้งหมด
            lbTotal.setText("ราคารวม : " + df.format(total) + " บาท ");
            
            model.addRow(v); //นำข้อมูลใน เว็กเตอร์ลงตารางและแสดงผลเรียงจาก รายอาการอาหาร ราคา จำนวน จำนวนเงิน ตามลำดับ 
            txtTotalSt.requestFocus();
            txtTotalSt.setText("");
        }
        
//               if (check1()) {
//            //เพิ่มจำนวนเข้าไปก่อนหน้า
//            int b = Integer.parseInt(model.getValueAt(nn, 3).toString()) + Integer.parseInt(txtTotalSt.getText()); // a =จำนวนเดิมที่เพิ่มเข้าไปก่อนหน้า +เพิ่มจำนวนที่เพิ่มเข้าไปใหม่
//            model.setValueAt(b, nn, 3); //นำข้อมูลของ a ลงไป ในแถวที่เลือกและคอลัมที่ 2
//            System.out.println("a = " + b);
//           
//            //หาจำนวนเงินของแต่ละรายการ
//            double price = b* Double.valueOf(tb.getValueAt(nn, 2).toString());
//            System.out.println("จำนวนเงินใหม่ + " + price);
//            model.setValueAt(df.format(price), nn, 4); //นำราคาใหม่มาแสดงแถวที่เลือกคอลัมที่ 3
//            //หาค่ารวม
//            money = Double.valueOf(txtPriceSt.getText()) * Double.valueOf(txtTotalSt.getText()); //หาจำนวนเงินแต่ละรายการที่ต้องจ่าย โดยราคา * จำนวน 
//            total += money;
//            lbTotal.setText("ราคารวม : " + df.format(total) + " บาท ");
//       
//        }  else {
//              v.add(cbbTB.getSelectedItem().toString());
//            v.add(cbbSteak.getSelectedItem().toString()); //รายการอาหาร
//            v.add(txtPriceSt.getText());//ราคาชุด
//            v.add(txtTotalSt.getText());//จำนวน
//            money = Double.valueOf(txtPriceSt.getText()) * Double.valueOf(txtTotalSt.getText()); //หาจำนวนเงินแต่ละรายการที่ต้องจ่าย โดยราคา * จำนวน
//            v.add(df.format(money));// เก็บค่าลงจำนวนเงืนลงในตาราง
//            
//            total += money; //หาราคารวมทั้งหมด
//            lbTotal.setText("ราคารวม : " + df.format(total) + " บาท ");
//            
//            model.addRow(v); //นำข้อมูลใน เว็กเตอร์ลงตารางและแสดงผลเรียงจาก รายอาการอาหาร ราคา จำนวน จำนวนเงิน ตามลำดับ 
//            txtTotalSt.requestFocus();
//            txtTotalSt.setText("");
//        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed

        if (tb.isRowSelected(selected)) { //ต้องเลือกแถวถึงจะลบได้
            double moneySelected = Double.valueOf(tb.getValueAt(selected, 3).toString().replace(",", "")); //เก็บตำแหน่งที่เลือกและ คอลัมที่3 ตอนรับค่ามามี คอมม่า(,)เลยต้องใช่ replace(แทนที่ด้วย เป็นค่าว่าง)
            System.out.println("แสดงจำนวนเงินที่ลบ " + moneySelected);
            
            total -= moneySelected; //ราคารวมหลังจากลบรายการ
            lbTotal.setText("ราคารวม : " + df.format(total) + " บาท ");
            
            if (total == 0) {
                lbTotal.setText("ราคารวม : 0.00 บาท ");
            }
            model.removeRow(selected); //ลบแถวตำแหน่งที่เลือก
            txtTotalSt.requestFocus();
            txtTotalSt.setText("");

        }
        else{
            JOptionPane.showMessageDialog(this, "กรุณาเลือกแถวในตาราง","",JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_btnDelActionPerformed

    private void tbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbMouseClicked
   
            selected = tb.getSelectedRow(); //เก็บตำแหน่งที่ผู้ใช้เลือกแถว
            String name = tb.getValueAt(selected, 0).toString();//เก็บชื่อรายการอาหาร
            System.out.println("์Name " + name);
            System.out.println("แถวที่เลือก " + selected);
            
          
            //เปลี่ยนแปลง item ในคอมโบบ็อก
            for (int i = 0; i < cbbSteak.getItemCount(); i++) { 
                if (name.equals(cbbSteak.getItemAt(i))) { //ถ้าตรงกันให้เปลี่ยนเป็นชื่อตัวนั้น
                    cbbSteak.setSelectedIndex(i);
                }
            }//for
        


    }//GEN-LAST:event_tbMouseClicked

    private void cbbSteakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbSteakActionPerformed
        txtTotalSt.requestFocus();
        txtTotalSt.setText("");
    }//GEN-LAST:event_cbbSteakActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
     if (txtTotalSt.getText().isEmpty()) { //ถ้าจำนวนเป็นค่าว่างให้แสดงผลเตือน
            JOptionPane.showMessageDialog(this, "โปรดเลือกอาหารที่จะแก้ไข", "", JOptionPane.ERROR_MESSAGE);
        }
//เก็บราคาก้อนแก้ไข
        double before = Double.valueOf(tb.getValueAt(selected, 1).toString()) * Double.valueOf(tb.getValueAt(selected, 2).toString());
        System.out.println("Before " + before);

//นำจำนวนลงตาราง
 if(tb.isRowSelected(selected)){
        tb.setValueAt(txtTotalSt.getText(), selected, 2);
         int amout = Integer.valueOf(txtTotalSt.getText());
        //คำนวนราคาใหม่หลังจากกดแก้ไข
        double bnew = amout * Double.valueOf(tb.getValueAt(selected, 1).toString());
        tb.setValueAt(df.format(bnew), selected, 3);
        total = total - before + bnew;
        lbTotal.setText("ราคารวม : " + df.format(total) + " บาท ");}
      
    }//GEN-LAST:event_btnEditActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        String menu_list ="",qty_list ="",price_list ="",total_list ="";        
        int i = 0;
        menu_list += tb.getValueAt(i, 0).toString();
        price_list += tb.getValueAt(i, 1).toString();
        qty_list += tb.getValueAt(i, 2).toString();
        total_list += tb.getValueAt(i, 3).toString();
        for (i = 1; i < tb.getRowCount(); i++) {
            menu_list += " " + tb.getValueAt(i, 0).toString();
            price_list += " " + tb.getValueAt(i, 1).toString();
            qty_list += " " + tb.getValueAt(i, 2).toString();
            total_list += " " + tb.getValueAt(i, 3).toString();
        }
        System.out.println("Menu List : " + menu_list);
        System.out.println("Qty List : " + qty_list);
        System.out.println("Price List : " + price_list);
        System.out.println("Total List : " + total_list);

        String sql = String.format("insert into History(Menu,qty,total,userid) values('%s','%s','%s','%s')",menu_list,qty_list,total_list,Project.user);
        System.out.println("SQL : " + sql);
        try{
            if(new ConnecDB().execute(sql)){
                JOptionPane.showMessageDialog(this, "บันทึกข้อมูลเรียบร้อยแล้ว");
                this.dispose();
                new Project7().setVisible(true);
            }else{
                JOptionPane.showMessageDialog(this, "ไม่สามารถบันทึกข้อมูลได้");
            }
        }catch(Exception e){
            System.out.println("Error : " + e);
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       Project1 pj1 = new Project1();
       dispose();
       pj1.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Project6.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Project6.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Project6.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Project6.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Project6().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnEdit;
    private javax.swing.JComboBox<String> cbbSteak;
    private javax.swing.JComboBox<String> cbbTB;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbTotal;
    private javax.swing.JTable tb;
    private javax.swing.JTextField txtPriceSt;
    private javax.swing.JTextField txtTotalSt;
    // End of variables declaration//GEN-END:variables
}
